-- File: SinGenerator.vhd
-- Generated by MyHDL 0.9.0
-- Date: Mon Oct  9 02:54:30 2017


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_090.all;

entity SinGenerator is
    port (
        SinValue_out: out signed (30 downto 0);
        clk: in std_logic;
        rst: in std_logic;
        ena: in std_logic
    );
end entity SinGenerator;


architecture MyHDL of SinGenerator is


constant INTERNALWIDTH: integer := 29;
constant KONSTANT_FACTOR: integer := 478355485;



signal Reg_T1: signed (30 downto 0);
signal Reg_T0: signed (30 downto 0);

begin






SinValue_out <= Reg_T1;


SINGENERATOR_LOGICCP: process (clk, rst) is
begin
    if (rst = '0') then
        Reg_T0 <= to_signed((2 ** INTERNALWIDTH) - 1, 31);
        Reg_T1 <= to_signed(KONSTANT_FACTOR, 31);
    elsif rising_edge(clk) then
        if (ena = '1') then
            Reg_T0 <= Reg_T1;
            Reg_T1 <= resize(shift_right((KONSTANT_FACTOR * Reg_T1), (INTERNALWIDTH - 1)) - Reg_T0, 31);
        end if;
    end if;
end process SINGENERATOR_LOGICCP;

end architecture MyHDL;
